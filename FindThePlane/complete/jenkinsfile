pipeline {
    agent any
    environment {
        dockerImage = ''
        registry = "http://192.168.160.48:5000"
      }
    stages {
        stage('Hello') {
            steps {
                echo 'Hello World'
            }
        }
         
        stage('Cloning repository') {
            steps {
                git(
                    branch: 'main',
                    url: 'https://github.com/DiogoFernandes77/ESP22'
                )
                sh "chmod +x -R ${env.WORKSPACE}"
            }
        }


        stage('build') {
            steps {
                dir("FindThePlane/complete") {
                    sh'rm -rf target'
                    sh 'mvn clean install -Dmaven.test.skip=true'
                }
            }
        }


        
        stage('artifactory') {
            steps {
                dir("FindThePlane/complete") {
                    sh 'mvn -X -Dmaven.test.skip=true --settings ../settings.xml deploy'
                   
                }
            }
        }

        stage('Integration tests') {
            steps{
                dir('FindThePlane/complete'){
                    script{
//                        try{
                            sh "mvn test " //-Pintegration
//                         } catch(err) {
//                                 step([$class: 'JUnitResultArchiver', testResults:
//                                 '**/target/surefire-reports/TEST-'
//                                     + '*IntegrationTest.xml'])
//                                 throw err
//                         }
                    }
//                     step([$class: 'JUnitResultArchiver', testResults:
//                         '**/target/surefire-reports/TEST-'
//                             + '*IntegrationTest.xml'])
                }
            }
        }

        
      
        stage('build and deploy image') {
            steps{
                script{
                    dockerImage = docker.build("esp22_findtheplane","./FindThePlane/complete") 
                    docker.withRegistry(registry) {
                            dockerImage.push("$BUILD_NUMBER")
                            dockerImage.push('latest')
                    }
                    dockerImage = docker.build("producer-python","./Producer") 
                    docker.withRegistry(registry) {
                            dockerImage.push("$BUILD_NUMBER")
                            dockerImage.push('latest')
                    }    
                }
                
            }
        }
        
        //stage('Remote Controll'){
        //	steps{
		//	sshagent (credentials: ['esp22_playground']){
		//	catchError(buildResult: 'SUCCESS', stageResult: 'SUCCESS'){
        //                sh 'ssh -o StrictHostKeyChecking=no esp22@192.168.160.87 docker stop esp22_findtheplane'
        //                sh 'ssh -o StrictHostKeyChecking=no esp22@192.168.160.87 docker rm  esp22_findtheplane'
        //                sh 'ssh -o StrictHostKeyChecking=no esp22@192.168.160.87 docker rmi  192.168.160.48:5000/esp22_findtheplane'
        //            }
		//	}
			
        //	}
        
        
        //}
        
        
        
    }
        
    
}

